# Ansible playbook for deploying a Flask app
---
# Install system apt packages
- hosts: flask_app_ubuntu
  become: yes
  become_method: sudo
  tasks:
    - name: update cache
      apt: name=python-software-properties state=present update_cache=yes cache_valid_time=43200
    - name: disable lighttpd
      systemd: name=lighttpd state=stopped enabled=no # To avoid conflicts with nginx
    - name: install packages
      apt: name={{item}} state=installed
      with_items:
        - tree # Optional
        - python-pip # Optional
        - python-dev # Optional
        - python3-pip
        - python3-dev
        - nginx

# Install the app, note: don't do these tasks with become sudo
- hosts: flask_app_ubuntu
  tasks:
    - name: clone repo
      git:
        repo: "https://github.com/davechibuike/flask_app_Project.git"
        dest: /home/ubuntu/flask_app_Project
        update: yes # Does a git pull if the repo already exists
    - name: install modules in a virtualenv
      pip:
        requirements: /home/ubuntu/flask_app_Project/requirements.txt
        virtualenv: /home/ubuntu/flask_app_Project/env
        virtualenv_python: python3.5

# Configure app systemd service and nginx
- hosts: flask_app_ubuntu
  become: yes
  become_method: sudo
  tasks:
    - name: template systemd service config
      copy:
        src: .service
        dest: /etc/systemd/system/flask_app_Project.service
    - name: start systemd app service
      systemd: name=flask_app_Project.service state=restarted enabled=yes
    - name: template nginx site config
      template:
        src: .nginx
        dest: /etc/nginx/sites-available/flask_app_Project
    - name: remove default nginx site config
      file: path=/etc/nginx/sites-enabled/default state=absent
    # - command: mv /etc/nginx/sites-enabled/default /tmp/nginx.sites-enabled.default
    - name: enable nginx site
      file:
        src: /etc/nginx/sites-available/flask_app_Project
        dest: /etc/nginx/sites-enabled/default
        state: link
        force: yes
    - name: restart nginx
      systemd: name=nginx state=restarted enabled=yes
    - name: open firewall for nginx
      ufw:
        rule: allow
        name: Nginx Full

# Run a quick test to verify the site is working
- hosts: webservers
  tasks:
    - name: get url
      get_url:
        url: http://51.20.133.179
        dest: /tmp/index.html
    - name: read html
      shell: cat /tmp/index.html
      register: html_contents
    - name: check for string in html
      when: html_contents.stdout.find('hello') != -1
      debug: msg="success!"
